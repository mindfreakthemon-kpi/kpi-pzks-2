.row-fluid
	.col-xs-12
		h4 Task queue
		pre.code= tasks.map(function (task) { return task.number; }).join(', ')
.row-fluid
	.col-xs-4
		table.table.table-bordered.table-striped.table-hover
			caption Processors
			tr
				th(width='50') #
				each processor in processorsHeader
					th #{processor.number} #{''}
						sup #{processor.id}
			each state in states
				tr
					td= state.row + 1
					each processor in processorsHeader
						- var taskId = state.processors.get(processor.id);
						td
							if taskId !== undefined
								- var task = tasks[taskId]
								= task.number
								sup #{taskId}
							else
								| &mdash;
	.col-xs-8
		table.table.table-bordered.table-striped.table-hover
			caption Channels
			tr
				th(width='50') #
				each channel in channelsHeader
					- var sourceProcessor = processors[channel.source]
					- var targetProcessor = processors[channel.target]
					th #{sourceProcessor.number} => #{targetProcessor.number} #{''}
						sup #{channel.id}
			each state in states
				tr
					td= state.row + 1
					each channel in channelsHeader
						- var linkId = state.channels.get(channel.id)
						td
							if linkId !== undefined
								- var link = links[linkId]
								- var sourceLink = tasks[link.source]
								- var targetLink = tasks[link.target]
								| #{sourceLink.number} #{''}
								sup #{link.source}
								| #{''}
								| => #{targetLink.number} #{''}
								sup #{link.target}
							else
								| &mdash;
.row-fluid
	.col-xs-12
		details
			summary SYSTEM_MATRIX
			pre= matrix